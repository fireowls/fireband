buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}

allprojects {

    version = '1.0'
    ext {
        appName = "FireBand"
        gdxVersion = '1.9.10'
        roboVMVersion = '2.3.7'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

}

subprojects { project ->

    if (project.name != 'android' && project.name != 'panel-board') {

        task deployReport(type: Copy) { task ->
            dependsOn ":$task.project.name:test"
            group 'pages'
            description 'deploy the report of tests'

            from "${file("build/reports/tests/").path}"
            into "../pages/tests/$task.project.name"
        }

        task deployDoc(type: Copy) { task ->
            dependsOn ":$task.project.name:javadoc"
            group 'pages'
            description 'deploy the javadoc'

            from "${file('build/docs/javadoc/').path}"
            into "../pages/docs/$task.project.name"
        }

        task deployTestAndDoc { task ->
            description 'deploy report and javadoc'
            group 'pages'
            finalizedBy ":$task.project.name:deployReport"
            finalizedBy ":$task.project.name:deployDoc"
        }

    }

}

static def releaseTime(){
    return new Date().format("yyyy-MM-dd") + 'T' + new Date().format("HH:mm:ss")
}

task generateEnvironementForPages {
    group 'pages'
    doLast {
        def projects = new File('panel-board/src/environments/projects.ts')
        projects.createNewFile()
        projects.text = """import { Project } from '../app/models/project.model';

export const projects: Project[] = [
    __projects__
];
"""
        def jsProjects = ""
        subprojects.forEach{
            p ->
                if (p.name != 'panel-board' && p.name != 'android') {
                    jsProjects += "{ name: '$p.name', date: new Date('${releaseTime()}') }, "
                }
        }

        projects.text = projects.text.replace('__projects__', jsProjects.substring(0, jsProjects.length() - 2))
    }
}

task deployPages {
    group 'pages'
    description 'deploy for gh-pages'
    dependsOn generateEnvironementForPages
    doFirst {
        file('pages').delete()
    }
    subprojects.forEach { task ->
        if (task.project.name != 'panel-board' && task.project.name != 'android')
            finalizedBy ":$task.project.name:deployTestAndDoc"
    }
    finalizedBy ":panel-board:deploy"
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        
    }
}